{"ast":null,"code":"import _classCallCheck from \"/root/Bureau/New projrct react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/Bureau/New projrct react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/root/Bureau/New projrct react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/root/Bureau/New projrct react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/root/Bureau/New projrct react/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/root/Bureau/New projrct react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/root/Bureau/New projrct react/src/component/Ajoute/configAlert.jsx\";\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport React, { Component } from 'react';\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nvar confirm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(confirm, _Component);\n\n  function confirm(props) {\n    var _this;\n\n    _classCallCheck(this, confirm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(confirm).call(this, props));\n\n    _this.submit = function (a) {\n      confirmAlert({\n        message: 'Suppression Produit',\n        buttons: [{\n          label: 'Oui',\n          onClick: function onClick() {\n            return _this.props.deleteUser(a);\n          }\n        }, {\n          label: 'Non'\n        }]\n      });\n    };\n\n    _this.custom = function (a) {\n      confirmAlert({\n        customUI: function customUI(_ref) {\n          var onClose = _ref.onClose;\n          return React.createElement(\"div\", {\n            className: \"custom-ui\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            value: _this.state.username,\n            onchange: function onchange(e) {\n              return _this.usernameHandler(e);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }), \" \", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }), React.createElement(\"button\", {\n            onClick: function onClick() {\n              _this.save.editorState();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, \"ok\"), React.createElement(\"button\", {\n            onClick: onClose,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, \"Annuler\"));\n        }\n      });\n    };\n\n    _this.handleSave = _this.handeleSave.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(confirm, [{\n    key: \"usernameHandler\",\n    value: function usernameHandler(e) {\n      this.setState({\n        username: e.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        class: \"table table-bordered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        className: \"tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"id\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Produits\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Prix\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.props.users.length >= 0 ? this.props.users.map(function (user) {\n        return React.createElement(\"tr\", {\n          key: user.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          className: \"cent\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, user.id), React.createElement(\"td\", {\n          id: \"tex\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, user.name), React.createElement(\"td\", {\n          id: \"plus\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"flot\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, parseInt(user.username))), React.createElement(\"td\", {\n          className: \"cent\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: function onClick() {\n            return _this2.submit(user.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"X\"), React.createElement(\"button\", {\n          className: \"btn btn-success\",\n          onClick: function onClick() {\n            return _this2.custom(user.username);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"Edit\")));\n      }) : React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        id: \"To\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-info btn-md\",\n        onClick: \"somme()\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"TOTAL\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        id: \"resultat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"TOTAL :\")));\n    }\n  }]);\n\n  return confirm;\n}(Component);\n\nexport default confirm;","map":{"version":3,"sources":["/root/Bureau/New projrct react/src/component/Ajoute/configAlert.jsx"],"names":["confirmAlert","React","Component","confirm","props","submit","a","message","buttons","label","onClick","deleteUser","custom","customUI","onClose","state","username","e","usernameHandler","save","editorState","handleSave","handeleSave","bind","setState","target","value","users","length","map","user","id","name","parseInt"],"mappings":"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","sourcesContent":["import { confirmAlert } from 'react-confirm-alert'; // Import\nimport React, { Component } from 'react'\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\n\nclass confirm extends Component {\n  constructor(props){\n    super(props);\n    this.handleSave = this.handeleSave.bind(this);\n  }\n\n  usernameHandler(e) {\n    this.setState({username:e.target.value});\n  }\n\n    submit = (a) => {\n        confirmAlert({\n          message: 'Suppression Produit',\n          buttons: [\n            {\n              label: 'Oui',\n              onClick: () => this.props.deleteUser(a)\n            },\n            {\n              label: 'Non',\n            }\n          ],\n        })\n      };\n      custom = (a) => {\n        confirmAlert({\n         \n          customUI: ({ onClose }) => {\n            return (\n              <div className='custom-ui'>\n              <input value={this.state.username} onchange={(e)=>this.usernameHandler(e)}/> <br/>\n                <button onClick={() => {\n                    this.save.editorState()\n                }}>ok</button>\n                <button onClick={onClose}>Annuler</button>\n              </div>\n            )\n          }\n        })\n      };\n\n      render(){\n            return (\n                <center>\n                    <table class=\"table table-bordered\">\n                    <thead>\n                        <tr className=\"tab\">\n                            <th>id</th>\n                            <th>Produits</th>\n                            <th>Prix</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.users.length >= 0 ? (\n                        this.props.users.map(user => (\n                                <tr key={user.id}>\n                                    <td className=\"cent\">{user.id}</td>\n                                    <td id=\"tex\">{user.name}</td>\n                                    <td id=\"plus\"><div className=\"flot\">{parseInt(user.username)}</div></td>\n                                    <td className=\"cent\">\n                                        <button className=\"btn btn-danger\" onClick={()=>this.submit(user.id)}>X</button>     \n                                        <button className=\"btn btn-success\" onClick={()=>this.custom(user.username)}>Edit</button>\n                                    </td>\n                                </tr>\n                            ))\n                        )\n                         : (\n                            <tr>\n                                <td colSpan={3}></td>\n                            </tr>\n                            \n                        )}\n                        \n                    </tbody>\n                </table>\n                <div  id=\"To\">\n                <button className=\"btn btn-info btn-md\" onClick=\"somme()\">TOTAL</button>\n                </div>\n                <div>\n                <h4 id=\"resultat\">TOTAL :</h4>\n                </div>\n\n\t</center>\n            );\n      }\n}\n\t\n\nexport default confirm;"]},"metadata":{},"sourceType":"module"}