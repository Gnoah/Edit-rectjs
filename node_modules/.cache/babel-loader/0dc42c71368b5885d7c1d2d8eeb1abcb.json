{"ast":null,"code":"import _classCallCheck from \"/root/Bureau/New projrct react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/Bureau/New projrct react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/root/Bureau/New projrct react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/root/Bureau/New projrct react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/root/Bureau/New projrct react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/root/Bureau/New projrct react/src/component/Ajoute/tableau.jsx\";\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport React, { Component } from 'react';\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nvar confirm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(confirm, _Component);\n\n  function confirm() {\n    _classCallCheck(this, confirm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(confirm).apply(this, arguments));\n  }\n\n  _createClass(confirm, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        class: \"table table-bordered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        className: \"tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \"Id\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Produits\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Prix\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, this.props.users.length >= 0 ? this.props.users.map(function (user) {\n        return React.createElement(\"tr\", {\n          key: user.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          className: \"cent\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, user.id), React.createElement(\"td\", {\n          id: \"tex\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, user.name), React.createElement(\"td\", {\n          id: \"plus\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"flot\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, parseInt(user.username))), React.createElement(\"td\", {\n          className: \"cent\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: function onClick() {\n            document.getElementById('popup').style.display = \"block\";\n\n            _this.props.editRow(user);\n          },\n          className: \"btn btn-success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: function onClick() {\n            return confirmAlert({\n              title: 'Suppression Produit',\n              message: user.name.substring(0, 1).toUpperCase() + user.name.substring(1).toLowerCase(),\n              buttons: [{\n                label: 'Oui',\n                onClick: function onClick() {\n                  return _this.props.deleteUser(user.id);\n                }\n              }, {\n                label: 'Non'\n              }]\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"X\")));\n      }) : React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return confirm;\n}(Component);\n\nexport default confirm;","map":{"version":3,"sources":["/root/Bureau/New projrct react/src/component/Ajoute/tableau.jsx"],"names":["confirmAlert","React","Component","confirm","props","users","length","map","user","id","name","parseInt","username","document","getElementById","style","display","editRow","title","message","substring","toUpperCase","toLowerCase","buttons","label","onClick","deleteUser"],"mappings":"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","sourcesContent":["import { confirmAlert } from 'react-confirm-alert'; // Import\nimport React, { Component } from 'react'\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\n\nclass confirm extends Component {\n\n      render(){\n            return (\n                <center>\n                    <table class=\"table table-bordered\">\n                    <thead>\n                        <tr className=\"tab\">\n                            <th>Id</th>\n                            <th>Produits</th>\n                            <th>Prix</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.users.length >= 0 ? (\n                        this.props.users.map(user => (\n                                <tr key={user.id}>\n                                    <td className=\"cent\">{user.id}</td>\n                                    <td id=\"tex\">{user.name}</td>\n                                    <td id=\"plus\"><div className=\"flot\">{parseInt(user.username)}</div></td>\n                                    <td className=\"cent\">\n                                    <button onClick={()=>{document.getElementById('popup').style.display=\"block\"\n                                          this.props.editRow(user)}} className=\"btn btn-success\">Edit</button>\n                                        <button className=\"btn btn-danger\" onClick={()=>confirmAlert({\n                                            title: 'Suppression Produit',\n                                            message: user.name.substring(0,1).toUpperCase()+user.name.substring(1).toLowerCase(),\n                                            buttons: [\n                                              {\n                                                label: 'Oui',\n                                                onClick: () => this.props.deleteUser(user.id)\n                                              },\n                                              {\n                                                label: 'Non',\n                                              }\n                                            ],\n                                          })}>X</button>\n                                        \n                                      \n                                    </td>\n                                </tr>\n                            ))\n                        )\n                         : (\n                            <tr>\n                                <td colSpan={3}></td>\n                            </tr>\n                            \n                        )}\n                        \n                    </tbody>\n                </table>\n                  \n\n\t</center>\n            );\n      }\n}\n\t\n\nexport default confirm;"]},"metadata":{},"sourceType":"module"}